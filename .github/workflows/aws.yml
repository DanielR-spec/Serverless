# This workflow will build and push a new Lambda to AWS,
# and then will deploy a new task definition, when there is a push to the "production" branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Store an IAM user access key in GitHub Actions secrets named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
#    See the documentation for each action used below for the recommended IAM policies for this IAM user,
#    and best practices on handling the access key credentials.

name: AWS Lambda WorkFlow

on:
  push:
    branches: [ "production" ]

env:
  AWS_REGION: us-east-1     # set this to your preferred AWS region, e.g. us-west-1

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install Python 3.9
      run: |
        sudo apt-get update
        sudo apt-get install -y python3.9
    - name: Add Python path to PATH
      run: echo "export PATH=$PATH:/usr/local/bin/python" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        architecture: 'x64'
        
    - name: Group Lambda & Package Requirements
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt -t lambdas/log

    - name: Validate Variables
      run: |
        echo "DBHOST=${{ secrets.DBHOST }}"
        echo "DBNAME=${{ secrets.DBNAME }}"
        echo "DBUSER=${{ secrets.DBUSER }}"
        echo "DBPASSWORD=${{ secrets.DBPASSWORD }}"     

    - name: Deploy Lambda function & Packages
      run: |
        sam build --template-file infrastructure/template.yaml
        sam deploy \
        --template-file infrastructure/template.yaml \
        update-stack --stack-name motivy-analytics-lambdas \
        --capabilities CAPABILITY_IAM \
        --s3-bucket motivy-analytics \
        --parameter-overrides \
          DBHOST=${{ secrets.DBHOST }} \
          DBNAME=${{ secrets.DBNAME }} \
          DBUSER=${{ secrets.DBUSER }} \
          DBPORT=${{ secrets.DBPORT }} \
          DBPASSWORD=${{ secrets.DBPASSWORD }}
